version: '3.9'
services:

  wavefrontproxy:
    container_name: wavefrontproxy
    image: wavefronthq/proxy:latest
    restart: always
    environment:
      - WAVEFRONT_TOKEN=${WAVEFRONT_TKN}
      - WAVEFRONT_URL
      - WAVEFRONT_PROXY_ARGS
      - JAVA_HEAP_USAGE=1650m
    ports:
      - 2878:2878
      - 30001:30001
    mem_limit: 2g

  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one
    container_name: jaeger
    ports:
      - "5775:5775"
      - "5778:5778"
      - "6831:6831"
      - "6832:6832"
      - "9411:9411"
      - "16686:16686"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT

  # Collector
  otelcol:
    image: otel/opentelemetry-collector-contrib:0.56.0
    container_name: otel-col
    restart: on-failure
    command: [ "--config=/etc/otelcol-config.yml" ]
    volumes:
      - ./src/otelcollector/otelcol-config.yml:/etc/otelcol-config.yml:Z
    ports:
      - "4317"
      - "4318"
      - "9464"
      - "30001"
      - "8888:8888"
    depends_on:
      - wavefrontproxy

  # Redis
  redis-cart:
    image: redis:alpine
    container_name: redis-cart
    ports:
      - "${REDIS_PORT}"
    depends_on:
      - fluentd
    environment:
      - OTEL_RESOURCE_ATTRIBUTES=service.name=redis,application=${APPLICATION}
    logging:
        driver: "fluentd"
        options:
          fluentd-address: localhost:24224
          tag: service.redis.${APPLICATION}

  fluentd:
    container_name: vmware-log-intelligence
    image: vmware/log-intelligence-fluentd
    restart: always
    command: fluentd
    environment:
      NODE_NAME: log-container
      FLUENTD_ARGS: --no-supervisor -q -vv
    volumes:
      - ./src/fluentd/config/fluent.conf:/etc/fluent/fluent.conf:Z
    ports:
      - 24224:24224
      - 24224:24224/udp
    depends_on:
      - wavefrontproxy
    links:
      - wavefrontproxy
        
  # AdService
  adservice:
    image: ${IMAGE_NAME}:${IMAGE_VERSION}-adservice
    container_name: ad-service
    build:
      context: ./
      dockerfile: ./src/adservice/Dockerfile
    ports:
      - "${AD_SERVICE_PORT}"
    environment:
      - AD_SERVICE_PORT
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
      - OTEL_RESOURCE_ATTRIBUTES=service.name=adservice,application=${APPLICATION}
    depends_on:
      - otelcol
      - fluentd
    links:
      - fluentd
    logging:
        driver: "fluentd"
        options:
          fluentd-address: localhost:24224
          tag: service.adservice.${APPLICATION}

  # CartService
  cartservice:
    image: ${IMAGE_NAME}:${IMAGE_VERSION}-cartservice
    container_name: cart-service
    build:
      context: ./
      dockerfile: ./src/cartservice/src/Dockerfile
    ports:
      - "${CART_SERVICE_PORT}"
    environment:
      - CART_SERVICE_PORT
      - REDIS_ADDR
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_RESOURCE_ATTRIBUTES=service.name=cartservice,application=${APPLICATION}
      - ASPNETCORE_URLS=http://*:${CART_SERVICE_PORT}
    depends_on:
      - redis-cart
      - otelcol
    links:
      - fluentd
    logging:
        driver: "fluentd"
        options:
          fluentd-address: localhost:24224
          tag: service.cartservice.${APPLICATION}

  # CheckoutService
  checkoutservice:
    image: ${IMAGE_NAME}:${IMAGE_VERSION}-checkoutservice
    container_name: checkout-service
    build:
      context: ./
      dockerfile: ./src/checkoutservice/Dockerfile
    ports:
      - "${CHECKOUT_SERVICE_PORT}"
    environment:
      - CHECKOUT_SERVICE_PORT
      - CART_SERVICE_ADDR
      - CURRENCY_SERVICE_ADDR
      - EMAIL_SERVICE_ADDR
      - PAYMENT_SERVICE_ADDR
      - PRODUCT_CATALOG_SERVICE_ADDR
      - SHIPPING_SERVICE_ADDR
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
      - OTEL_RESOURCE_ATTRIBUTES=service.name=checkout,application=${APPLICATION}
    depends_on:
      - fluentd
      - cartservice
      - currencyservice
      - emailservice
      - paymentservice
      - productcatalogservice
      - shippingservice
      - otelcol
    links:
      - fluentd
    logging:
        driver: "fluentd"
        options:
          fluentd-address: localhost:24224
          tag: service.checkout.${APPLICATION}

  # CurrencyService
  currencyservice:
    image: ${IMAGE_NAME}:${IMAGE_VERSION}-currencyservice
    container_name: currency-service
    build:
      context: ./src/currencyservice
      args:
        - GRPC_VERSION=1.46.0
        - OPENTELEMETRY_VERSION=1.4.0
    ports:
      - "${CURRENCY_SERVICE_PORT}"
    environment:
      - PORT=${CURRENCY_SERVICE_PORT}
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
      - OTEL_RESOURCE_ATTRIBUTES=service.name=currency,application=${APPLICATION}
    depends_on:
      - otelcol
      - fluentd
    logging:
        driver: "fluentd"
        options:
          fluentd-address: localhost:24224
          tag: service.currency.${APPLICATION}

  # EmailService
  emailservice:
    image: ${IMAGE_NAME}:${IMAGE_VERSION}-emailservice
    container_name: email-service
    # build:
    #   context: ./src/emailservice
    ports:
      - "${EMAIL_SERVICE_PORT}"
    environment:
      - APP_ENV=production
      - PORT=${EMAIL_SERVICE_PORT}
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://otelcol:4318/v1/traces
      - OTEL_RESOURCE_ATTRIBUTES=service.name=email,application=${APPLICATION}
    depends_on:
      - otelcol
    links:
      - fluentd
    logging:
        driver: "fluentd"
        options:
          fluentd-address: localhost:24224
          tag: service.email.${APPLICATION}

  # Frontend
  frontend:
    image: ${IMAGE_NAME}:${IMAGE_VERSION}-frontend
    container_name: frontend
    build:
      context: ./
      dockerfile: ./src/frontend/Dockerfile
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    environment:
      - FRONTEND_ADDR
      - AD_SERVICE_ADDR
      - CART_SERVICE_ADDR
      - CHECKOUT_SERVICE_ADDR
      - CURRENCY_SERVICE_ADDR
      - PRODUCT_CATALOG_SERVICE_ADDR
      - RECOMMENDATION_SERVICE_ADDR
      - SHIPPING_SERVICE_ADDR
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
      - OTEL_RESOURCE_ATTRIBUTES=service.name=frontend,application=${APPLICATION}
      - OTEL_EXPORTER_OTLP_ENDPOINT
    depends_on:
      - adservice
      - cartservice
      - checkoutservice
      - currencyservice
      - otelcol
      - productcatalogservice
      - recommendationservice
      - shippingservice
    extra_hosts:
      - "host.docker.internal:host-gateway"
    links:
      - fluentd
    logging:
        driver: "fluentd"
        options:
          fluentd-address: localhost:24224
          tag: service.frontend.${APPLICATION}

  # PaymentService
  paymentservice:
    image: ${IMAGE_NAME}:${IMAGE_VERSION}-paymentservice
    container_name: payment-service
    build:
      context: ./
      dockerfile: ./src/paymentservice/Dockerfile
    ports:
      - "${PAYMENT_SERVICE_PORT}"
    environment:
      - PAYMENT_SERVICE_PORT
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
      - OTEL_RESOURCE_ATTRIBUTES=service.name=payment,application=${APPLICATION}
    depends_on:
      - otelcol
    links:
      - fluentd
    logging:
        driver: "fluentd"
        options:
          fluentd-address: localhost:24224
          tag: service.payment.${APPLICATION}

  # ProductCatalogService
  productcatalogservice:
    image: ${IMAGE_NAME}:${IMAGE_VERSION}-productcatalogservice
    container_name: product-catalog-service
    build:
      context: ./
      dockerfile: ./src/productcatalogservice/Dockerfile
    ports:
      - "${PRODUCT_CATALOG_SERVICE_PORT}"
    environment:
      - PRODUCT_CATALOG_SERVICE_PORT
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
      - OTEL_RESOURCE_ATTRIBUTES=service.name=productcatalog,application=${APPLICATION}
    depends_on:
      - otelcol
    links:
      - fluentd
    logging:
        driver: "fluentd"
        options:
          fluentd-address: localhost:24224
          tag: service.productcatalog.${APPLICATION}

  # RecommendationService
  recommendationservice:
    image: ${IMAGE_NAME}:${IMAGE_VERSION}-recommendationservice
    container_name: recommendation-service
    build:
      context: ./
      dockerfile: ./src/recommendationservice/Dockerfile
    ports:
      - "${RECOMMENDATION_SERVICE_PORT}"
    depends_on:
      - productcatalogservice
      - otelcol
    environment:
      - RECOMMENDATION_SERVICE_PORT
      - PRODUCT_CATALOG_SERVICE_ADDR
      - OTEL_PYTHON_LOG_CORRELATION=true
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
      - OTEL_RESOURCE_ATTRIBUTES=service.name=recommendation,application=${APPLICATION}
    links:
      - fluentd
    logging:
      driver: "fluentd"
      options:
          fluentd-address: localhost:24224
          tag: service.recommendation.${APPLICATION}

  # ShippingService
  shippingservice:
    image: ${IMAGE_NAME}:${IMAGE_VERSION}-shippingservice
    container_name: shipping-service
    build:
      context: ./
      dockerfile: ./src/shippingservice/Dockerfile
    ports:
      - "${SHIPPING_SERVICE_PORT}"
    environment:
      - PORT=${SHIPPING_SERVICE_PORT}
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
      - OTEL_RESOURCE_ATTRIBUTES=service.name=shipping,application=${APPLICATION}
    depends_on:
      - otelcol
      - fluentd
    logging:
        driver: "fluentd"
        options:
          fluentd-address: localhost:24224
          tag: service.shipping.${APPLICATION}

  # FeatureFlagService
  featureflagservice:
    image: ${IMAGE_NAME}:${IMAGE_VERSION}-featureflagservice
    container_name: feature-flag-service
      #    build:
      #context: ./src/featureflagservice
    ports:
      - "${FEATURE_FLAG_SERVICE_PORT}:${FEATURE_FLAG_SERVICE_PORT}"
      - "${FEATURE_FLAG_GRPC_SERVICE_PORT}"
    environment:
      - PORT=${FEATURE_FLAG_SERVICE_PORT}
      - GRPC_PORT=${FEATURE_FLAG_GRPC_SERVICE_PORT}
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
      - OTEL_RESOURCE_ATTRIBUTES=service.name=featureflag,application=${APPLICATION}
      - DATABASE_URL=ecto://ffs:ffs@ffs_postgres:5432/ffs
    depends_on:
      - ffs_postgres
      - fluentd
    logging:
        driver: "fluentd"
        options:
          fluentd-address: localhost:24224
          tag: service.featureflag.${APPLICATION}
  
  ffs_postgres:
    image: cimg/postgres:14.2
    container_name: postgres
    environment:
      - POSTGRES_USER=ffs
      - POSTGRES_DB=ffs
      - POSTGRES_PASSWORD=ffs
    links:
      - fluentd
    logging:
        driver: "fluentd"
        options:
          fluentd-address: localhost:24224
          tag: service.postgres.${APPLICATION}

  # LoadGenerator
  loadgenerator:
    image: ${IMAGE_NAME}:${IMAGE_VERSION}-loadgenerator
    container_name: load-generator
    build:
      context: ./
      dockerfile: ./src/loadgenerator/Dockerfile
    environment:
      - FRONTEND_ADDR
      - USERS
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
      - OTEL_RESOURCE_ATTRIBUTES=service.name=loadgenerator,application=${APPLICATION}
      - PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=python
    depends_on:
      - fluentd
      - frontend
    logging:
        driver: "fluentd"
        options:
          fluentd-address: localhost:24224
          tag: service.loadgenerator.${APPLICATION}

  # Prometheus
  prometheus:
    image: quay.io/prometheus/prometheus:v2.34.0
    container_name: prometheus
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus-config.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
    volumes:
      - ./src/prometheus/prometheus-config.yaml:/etc/prometheus/prometheus-config.yaml:Z
    ports:
      - "${PROMETHEUS_SERVICE_PORT}:${PROMETHEUS_SERVICE_PORT}"

  # Grafana
  grafana:
    image: grafana/grafana:9.0.1
    container_name: grafana
    volumes:
      - ./src/grafana/grafana.ini:/etc/grafana/grafana.ini:Z
      - ./src/grafana/provisioning/:/etc/grafana/provisioning/:Z
    ports:
      - "${GRAFANA_SERVICE_PORT}:${GRAFANA_SERVICE_PORT}"
